apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gogs
      deploymentconfig: gogs
    name: gogs
  spec:
    replicas: 1
    selector:
      app: gogs
      deploymentconfig: gogs
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: gogs
          deploymentconfig: gogs
      spec:
        containers:
        - image: docker.io/openshiftdemos/gogs:0.9.97
          imagePullPolicy: Never
          name: gogs
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/gogs/conf
            name: gogs-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: app.ini
              path: app.ini
            name: gogs-config
          name: gogs-config
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The Gogs server's http port
    labels:
      app: gogs
    name: gogs
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: gogs
      deploymentconfig: gogs
- apiVersion: v1 
  kind: Route
  metadata:
    labels:
      app: gogs
    name: gogs
  spec:
    host: gogs.127.0.0.1.nip.io
    to:
      name: gogs
      kind: Service
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      host: gogs.127.0.0.1.nip.io
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    name: gogs-postgresql
    labels:
      app: gogs-postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
    selector:
      name: gogs-postgresql
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gogs
    name: gogs-postgresql
  spec:
    replicas: 1
    selector:
      name: gogs-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: gogs-postgresql
        name: gogs-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: mauricio
          - name: POSTGRESQL_PASSWORD
            value: maltron
          - name: POSTGRESQL_DATABASE
            value: gogs
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: "100"
          - name: POSTGRESQL_SHARED_BUFFERS
            value: 12MB
          - name: POSTGRESQL_ADMIN_PASSWORD
            value: maltron
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7:latest
          imagePullPolicy: Never
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          resources:
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: gogs-config
    labels:
      app: gogs
  data:
    app.ini: |
      RUN_MODE = prod
      RUN_USER = gogs

      [database]
      DB_TYPE  = postgres
      HOST     = gogs-postgresql:5432
      NAME     = gogs
      USER     = mauricio
      PASSWD   = maltron

      [repository]
      ROOT = /opt/gogs/data/repositories

      [server]
      ROOT_URL=http://gogs.127.0.0.1.nip.io
      SSH_DOMAIN=gogs.127.0.0.1.nip.io

      [security]
      INSTALL_LOCK = true

      [service]
      ENABLE_CAPTCHA = false

      [webhook]
      SKIP_TLS_VERIFY = true
